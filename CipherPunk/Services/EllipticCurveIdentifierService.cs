namespace CipherPunk;

using Windows.Win32;

internal sealed class EllipticCurveIdentifierService : IEllipticCurveIdentifierService
{
    private Dictionary<BCRYPT_ECC_CURVE, string?>? ellipticCurveIdentifiers;

    public Dictionary<BCRYPT_ECC_CURVE, string?> GetEllipticCurveIdentifiers()
        => ellipticCurveIdentifiers ??= BuildEllipticCurveIdentifiers();

    public string? GetIdentifier(string code) => GetIdentifier(Enum.Parse<BCRYPT_ECC_CURVE>(code, true));

    public string? GetIdentifier(BCRYPT_ECC_CURVE code) => GetEllipticCurveIdentifiers()[code];

    private static Dictionary<BCRYPT_ECC_CURVE, string?> BuildEllipticCurveIdentifiers()
        => new()
        {
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_25519, null },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP160R1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP160R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP160T1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP160T1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP192R1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP192R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP192T1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP192T1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP224R1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP224R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP224T1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP224T1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP256R1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP256R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP256T1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP256T1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP320R1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP320R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP320T1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP320T1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP384R1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP384R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP384T1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP384T1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP512R1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP512R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_BRAINPOOLP512T1, PInvoke.szOID_ECC_CURVE_BRAINPOOLP512T1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_EC192WAPI, PInvoke.szOID_ECC_CURVE_EC192WAPI },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_NISTP192, PInvoke.szOID_ECC_CURVE_NISTP192 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_NISTP224, PInvoke.szOID_ECC_CURVE_NISTP224 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_NISTP256, PInvoke.szOID_ECC_CURVE_NISTP256 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_NISTP384, PInvoke.szOID_ECC_CURVE_NISTP384 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_NISTP521, PInvoke.szOID_ECC_CURVE_NISTP521 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP160K1, PInvoke.szOID_ECC_CURVE_SECP160K1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP160R1, PInvoke.szOID_ECC_CURVE_SECP160R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP160R2, PInvoke.szOID_ECC_CURVE_SECP160R2 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP192K1, PInvoke.szOID_ECC_CURVE_SECP192K1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP192R1, PInvoke.szOID_ECC_CURVE_SECP192R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP224K1, PInvoke.szOID_ECC_CURVE_SECP224K1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP224R1, PInvoke.szOID_ECC_CURVE_SECP224R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP256K1, PInvoke.szOID_ECC_CURVE_SECP256K1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP256R1, PInvoke.szOID_ECC_CURVE_SECP256R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP384R1, PInvoke.szOID_ECC_CURVE_SECP384R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_SECP521R1, PInvoke.szOID_ECC_CURVE_SECP521R1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_WTLS7, PInvoke.szOID_ECC_CURVE_WTLS7 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_WTLS9, PInvoke.szOID_ECC_CURVE_WTLS9 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_WTLS12, PInvoke.szOID_ECC_CURVE_WTLS12 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_X962P192V1, PInvoke.szOID_ECC_CURVE_X962P192V1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_X962P192V2, PInvoke.szOID_ECC_CURVE_X962P192V2 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_X962P192V3, PInvoke.szOID_ECC_CURVE_X962P192V3 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_X962P239V1, PInvoke.szOID_ECC_CURVE_X962P239V1 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_X962P239V2, PInvoke.szOID_ECC_CURVE_X962P239V2 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_X962P239V3, PInvoke.szOID_ECC_CURVE_X962P239V3 },
            { BCRYPT_ECC_CURVE.BCRYPT_ECC_CURVE_X962P256V1, PInvoke.szOID_ECC_CURVE_X962P256V1 }
        };
}